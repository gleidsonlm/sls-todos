org: gleidsonlm
app: todos
service: todos
frameworkVersion: '3'

custom:
  tableName: '${self:service}-${sls:stage}'
  dynamodb:
    start:
      inMemory: true
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ TodosTable, Arn ]
  environment:
    TODOS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: src/index.handler
    events:
      - http:
          path: /{proxy+}
          method: any
plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline
resources:
  Resources:
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
